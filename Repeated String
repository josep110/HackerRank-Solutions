import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

    /*
     * Complete the 'repeatedString' function below.
     *
     * The function is expected to return a LONG_INTEGER.
     * The function accepts following parameters:
     *  1. STRING s
     *  2. LONG_INTEGER n
     */

    public static long repeatedString(String s, long n) {
    // Write your code here

        long inInitial = 0;
        long inInfinite = 0;
        
        char[] charAr = s.toCharArray();
        for (char i : charAr){
            if (i=='a'){
                inInitial++;
            }
        }
       

        long fullSubS = n / (long)s.length() ;
        long remainder = n % (long)s.length() ;
        
        System.out.println(fullSubS);
        System.out.println(inInitial);
        inInfinite += fullSubS * inInitial;
        
        for (int i=0;i < remainder;i++){
            if (charAr[i]=='a'){
                inInfinite++;
            }
        }
        
        return inInfinite;
        
        
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String s = bufferedReader.readLine();

        long n = Long.parseLong(bufferedReader.readLine().trim());

        long result = Result.repeatedString(s, n);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
